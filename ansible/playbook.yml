---
- name: Deploy Guia FarmacÃªutico
  hosts: webservers
  become: yes
  vars:
    app_name: guiafarmaceutico
    app_version: "1.0.0"
    domain_name: guiafarmaceutico.com
    nginx_user: www-data
    nginx_group: www-data

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - nginx
          - curl
          - unzip
          - git
          - docker.io
          - docker-compose
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Create application directory
      file:
        path: /var/www/{{ app_name }}
        state: directory
        mode: '0755'
        owner: "{{ nginx_user }}"
        group: "{{ nginx_group }}"

    - name: Copy application files
      copy:
        src: "{{ item }}"
        dest: "/var/www/{{ app_name }}/"
        mode: '0644'
        owner: "{{ nginx_user }}"
        group: "{{ nginx_group }}"
      with_fileglob:
        - "*.html"
        - "*.css"
        - "*.js"
        - "*.jpg"
        - "*.png"
        - "*.json"
        - "*.xml"
        - "*.txt"

    - name: Create nginx configuration
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ app_name }}
        mode: '0644'
        owner: root
        group: root
      notify: restart nginx

    - name: Enable nginx site
      file:
        src: /etc/nginx/sites-available/{{ app_name }}
        dest: /etc/nginx/sites-enabled/{{ app_name }}
        state: link
      notify: restart nginx

    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

    - name: Create SSL directory
      file:
        path: /etc/nginx/ssl
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Generate self-signed SSL certificate
      command: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/{{ domain_name }}.key -out /etc/nginx/ssl/{{ domain_name }}.crt -subj "/C=BR/ST=SP/L=Sao Paulo/O=Farmacia/CN={{ domain_name }}"
      args:
        creates: /etc/nginx/ssl/{{ domain_name }}.crt

    - name: Create health check file
      copy:
        content: "healthy"
        dest: /var/www/{{ app_name }}/health
        mode: '0644'
        owner: "{{ nginx_user }}"
        group: "{{ nginx_group }}"

    - name: Set up firewall
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "80"
        - "443"
        - "22"

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny

    - name: Create systemd service for the application
      template:
        src: guiafarmaceutico.service.j2
        dest: /etc/systemd/system/{{ app_name }}.service
        mode: '0644'
        owner: root
        group: root
      notify: restart guiafarmaceutico

    - name: Start and enable application service
      systemd:
        name: "{{ app_name }}"
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Test nginx configuration
      command: nginx -t
      register: nginx_test

    - name: Show nginx test result
      debug:
        var: nginx_test.stdout_lines

  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted

    - name: restart guiafarmaceutico
      systemd:
        name: "{{ app_name }}"
        state: restarted