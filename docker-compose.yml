version: '3.8'

services:
  # Development service
  dev:
    build:
      context: .
      target: builder
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev
    profiles:
      - dev

  # Production service
  app:
    build:
      context: .
      target: production
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    profiles:
      - prod

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - prod

  # Redis for caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - prod

  # PostgreSQL for data (if needed)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: farma_db
      POSTGRES_USER: farma_user
      POSTGRES_PASSWORD: farma_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - prod

volumes:
  redis_data:
  postgres_data: